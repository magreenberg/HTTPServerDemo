apiVersion: v1
kind: Template
metadata:
  name: httpserverdemo
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: httpserverdemo
      expose: "true"
    name: httpserverdemo
  spec:
    ports:
    - name: http
      port: ${{HTTP_PORT}}
      protocol: TCP
      targetPort: ${{HTTP_PORT}}
    selector:
      app: httpserverdemo
    sessionAffinity: None
    #type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: httpserverdemo
    name: httpserverdemo
  spec:
    replicas: 1
    selector:
      deploymentConfig: httpserverdemo
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: httpserverdemo
          deploymentConfig: httpserverdemo
      spec:
        containers:
          - env:
              - name: HTTP_SERVER_PORT
                value: ${HTTP_PORT}
            image: ${APPLICATION_IMAGE}
            imagePullPolicy: Always
            name: httpserverdemo
            ports:
            - containerPort: ${{HTTP_PORT}}
              protocol: TCP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      expose: "true"
    name: httpserverdemo
  spec:
    port:
      targetPort: ${{HTTP_PORT}}
    to:
      kind: Service
      name: httpserverdemo
      weight: 100
    wildcardPolicy: None
parameters:
  - name: HTTP_PORT
    description: HTTP listen port
    value: "8080"
  - name: APPLICATION_IMAGE
    description: Image
    value: image-registry.openshift-image-registry.svc:5000/openshift/httpserverdemo:1
